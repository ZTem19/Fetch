@page "/browse"
@rendermode InteractiveServer
@using FetchApp.Data
@using Microsoft.EntityFrameworkCore
@implements IAsyncDisposable
@inject IDbContextFactory<FetchAppContext> DbFactory

<PageTitle>Available Dogs</PageTitle>

<div class="titlebar">
	Available Dogs
</div>

<div class="outerContainer">


	<div class="innerContainer">

		@foreach(DogListing dogListing in getPage(0)){
			<NavLink href="@($"/Adopt?DogId={dogListing.Id}")">
				<DogFrame Dog="dogListing"/>
			</NavLink>
		}

	</div>

</div>



@code {
	private FetchAppContext context = default!;

	protected override void OnInitialized()
	{
		// When created add dogs from dog service to context
		context = DbFactory.CreateDbContext();
		DogService.addToContext(context);
		getDogPages(10);
	}

	public async ValueTask DisposeAsync() => await context.DisposeAsync();

	private IEnumerable<DogListing[]>? _dogPages;

	private void getDogPages(int chunksize)
	{
		_dogPages = context.DogListing.ToList().AsEnumerable().Chunk(chunksize);
	}

	private List<DogListing> getPage(int page)
	{
		if(_dogPages != null){
			return _dogPages.ElementAt(page).ToList();
		}

		return new List<DogListing>();
	}
}
