<!-- This component is the nav bar at the top of the any page. -->
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider GetAuthenticationState


<div class="navbar">

	<div class="navbar-item" style="flex-grow: 3; margin: 0 0 0 1em">
		<NavLink class="nav-link" href="/">
			<span> 
				<img class="pawico" src="../../Assets/pawclipartdark.png" alt="Paw Picture" />
			</span>
			<span class="titlelink">
				Fetch
			</span>
		</NavLink>
	</div>


	<div class="navbar-item">
		<NavLink class="nav-link" href="/Dogs">
			<span>
				View Listings
			</span>
		</NavLink>
	</div>

	<AuthorizeView>
		<Authorized>
			<div class="navbar-item px-3">
				<NavLink class="nav-link" href="Account/Manage">
					<span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @getUserFName()
				</NavLink>
			</div>

			<div class="navbar-item px-3">
				<form action="Account/Logout" method="post">
					<AntiforgeryToken />
					<input type="hidden" name="ReturnUrl" value="@currentUrl" />
					<button type="submit" class="nav-link">
						<span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
					</button>
				</form>
			</div>

			<div class="navbar-item">
				<NavLink class="nav-link" href="/Profile">
					<img class="accountico" src="../../Assets/blankaccount.png" alt="View Your Profile" />
				</NavLink>
			</div>
		</Authorized>

		<NotAuthorized>
			<div class="navbar-item px-3">
				<NavLink class="nav-link" href="Account/Register">
					<span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
				</NavLink>
			</div>
			<div class="navbar-item px-3">
				<NavLink class="nav-link" href="Account/Login">
					<span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
				</NavLink>
			</div>

			<div class="navbar-item">
				<NavLink class="nav-link" href="/Profile">
					<img class="accountico" src="../../Assets/blankaccount.png" alt="View Your Profile" />
				</NavLink>
			</div>

		</NotAuthorized>
	</AuthorizeView>
</div>



@code {
	[Inject]
	NavigationManager NavigationManager { get; set; } = default;

	private ApplicationUser? User { get; set; }

	private string? currentUrl;

	private string getUserFName(){
		if(User != null){

		}

		System.Diagnostics.Debug.WriteLine("User is null");
		return User != null && User.FirstName != null ? User.FirstName : "First Name Here" ;
	}

	protected override void OnInitialized()
	{
		currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
		NavigationManager.LocationChanged += OnLocationChanged;
	}

	protected override async Task OnInitializedAsync()
	{
		var authState = await GetAuth
		UserManager.GetUserAsync();
	}

	private void OnLocationChanged(object? sender, LocationChangedEventArgs e) 
	{ 
		currentUrl = NavigationManager.ToBaseRelativePath(e.Location); 
		StateHasChanged(); 
	}

	public void Dispose() 
	{ 
		NavigationManager.LocationChanged -= OnLocationChanged; 
	}
}